/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/memberships": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all memberships */
        get: operations["memberships.index"];
        put?: never;
        /** Store one membership */
        post: operations["memberships.store"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/memberships/{membership}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show one membership */
        get: operations["memberships.show"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update one membership */
        patch: operations["memberships.update"];
        trace?: never;
    };
    "/membership-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all membership-types */
        get: operations["membership-types.index"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/membership-types/{membership_type}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show one membership-type */
        get: operations["membership-types.show"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update one membership-type */
        patch: operations["membership-types.update"];
        trace?: never;
    };
    "/members": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Store one member */
        post: operations["members.store"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/members/{member}/divisions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show divisions */
        get: operations["members.divisions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/members/{member}/relationships/divisions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show divisions relation */
        get: operations["members.divisions.show"];
        put?: never;
        /** Attach divisions relation */
        post: operations["members.divisions.attach"];
        /** Detach divisions relation */
        delete: operations["members.divisions.detach"];
        options?: never;
        head?: never;
        /** Update divisions relation */
        patch: operations["members.divisions.update"];
        trace?: never;
    };
    "/divisions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all divisions */
        get: operations["divisions.index"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/divisions/{division}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show one division */
        get: operations["divisions.show"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update one division */
        patch: operations["divisions.update"];
        trace?: never;
    };
    "/clubs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all clubs */
        get: operations["clubs.index"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/clubs/{club}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show one club */
        get: operations["clubs.show"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update one club */
        patch: operations["clubs.update"];
        trace?: never;
    };
    "/clubs/{club}/membership-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show membershipTypes */
        get: operations["clubs.membershipTypes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/clubs/{club}/relationships/membership-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show membershipTypes relation */
        get: operations["clubs.membershipTypes.show"];
        put?: never;
        /** Attach membershipTypes relation */
        post: operations["clubs.membershipTypes.attach"];
        /** Detach membershipTypes relation */
        delete: operations["clubs.membershipTypes.detach"];
        options?: never;
        head?: never;
        /** Update membershipTypes relation */
        patch: operations["clubs.membershipTypes.update"];
        trace?: never;
    };
    "/clubs/{club}/divisions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show divisions */
        get: operations["clubs.divisions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/clubs/{club}/relationships/divisions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show divisions relation */
        get: operations["clubs.divisions.show"];
        put?: never;
        /** Attach divisions relation */
        post: operations["clubs.divisions.attach"];
        /** Detach divisions relation */
        delete: operations["clubs.divisions.detach"];
        options?: never;
        head?: never;
        /** Update divisions relation */
        patch: operations["clubs.divisions.update"];
        trace?: never;
    };
    "/clubs/{club}/finance-accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show financeAccounts */
        get: operations["clubs.financeAccounts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/clubs/{club}/relationships/finance-accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show financeAccounts relation */
        get: operations["clubs.financeAccounts.show"];
        put?: never;
        /** Attach financeAccounts relation */
        post: operations["clubs.financeAccounts.attach"];
        /** Detach financeAccounts relation */
        delete: operations["clubs.financeAccounts.detach"];
        options?: never;
        head?: never;
        /** Update financeAccounts relation */
        patch: operations["clubs.financeAccounts.update"];
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all users */
        get: operations["users.index"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{user}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show one user */
        get: operations["users.show"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{user}/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show roles */
        get: operations["users.roles"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{user}/relationships/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show roles relation */
        get: operations["users.roles.show"];
        put?: never;
        /** Attach roles relation */
        post: operations["users.roles.attach"];
        /** Detach roles relation */
        delete: operations["users.roles.detach"];
        options?: never;
        head?: never;
        /** Update roles relation */
        patch: operations["users.roles.update"];
        trace?: never;
    };
    "/permissions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all permissions */
        get: operations["permissions.index"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finance-contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all finance-contacts */
        get: operations["finance-contacts.index"];
        put?: never;
        /** Store one finance-contact */
        post: operations["finance-contacts.store"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finance-contacts/{finance_contact}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show one finance-contact */
        get: operations["finance-contacts.show"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update one finance-contact */
        patch: operations["finance-contacts.update"];
        trace?: never;
    };
    "/receipts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all receipts */
        get: operations["receipts.index"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/receipts/{receipt}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show one receipt */
        get: operations["receipts.show"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finance-accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all finance-accounts */
        get: operations["finance-accounts.index"];
        put?: never;
        /** Store one finance-account */
        post: operations["finance-accounts.store"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finance-accounts/{finance_account}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show one finance-account */
        get: operations["finance-accounts.show"];
        put?: never;
        post?: never;
        /** Destroy one finance-account */
        delete: operations["finance-accounts.destroy"];
        options?: never;
        head?: never;
        /** Update one finance-account */
        patch: operations["finance-accounts.update"];
        trace?: never;
    };
    "/finance-accounts/{finance_account}/club": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show club */
        get: operations["finance-accounts.club"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finance-accounts/{finance_account}/relationships/club": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show club relation */
        get: operations["finance-accounts.club.show"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update club relation */
        patch: operations["finance-accounts.club.update"];
        trace?: never;
    };
    "/finance-accounts/{finance_account}/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show transactions */
        get: operations["finance-accounts.transactions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finance-accounts/{finance_account}/relationships/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show transactions relation */
        get: operations["finance-accounts.transactions.show"];
        put?: never;
        /** Attach transactions relation */
        post: operations["finance-accounts.transactions.attach"];
        /** Detach transactions relation */
        delete: operations["finance-accounts.transactions.detach"];
        options?: never;
        head?: never;
        /** Update transactions relation */
        patch: operations["finance-accounts.transactions.update"];
        trace?: never;
    };
    "/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all transactions */
        get: operations["transactions.index"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/transactions/{transaction}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show one transaction */
        get: operations["transactions.show"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update one transaction */
        patch: operations["transactions.update"];
        trace?: never;
    };
    "/transactions/{transaction}/finance-account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show financeAccount */
        get: operations["transactions.financeAccount"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/transactions/{transaction}/relationships/finance-account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show financeAccount relation */
        get: operations["transactions.financeAccount.show"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update financeAccount relation */
        patch: operations["transactions.financeAccount.update"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Helper/Errors */
        "helper.errors": {
            detail?: string;
            status: string;
            title: string;
            source?: {
                pointer?: string;
            };
        }[];
        /** Helper/JSONAPI */
        "helper.jsonapi": {
            /**
             * version
             * @example 1.0
             */
            version: string;
        };
        "meta.page": {
            /** @example 1 */
            currentPage?: number;
            /** @example 1 */
            from?: number;
            /** @example 20 */
            lastPage?: number;
            /** @example 10 */
            perPage?: number;
            /** @example 2 */
            to?: number;
            /** @example 2 */
            total?: number;
        };
        /** Resource/Club/Relationship/Divisions/Attach */
        "resources.clubs.relationship.divisions.attach": {
            /**
             * type
             * @default divisions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Club/Relationship/Divisions/Detach */
        "resources.clubs.relationship.divisions.detach": {
            /**
             * type
             * @default divisions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Club/Relationship/Divisions/Fetch */
        "resources.clubs.relationship.divisions.fetch": {
            /**
             * type
             * @default divisions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/Club/Relationship/Divisions/Update */
        "resources.clubs.relationship.divisions.update": {
            /**
             * type
             * @default divisions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Club/Relationship/FinanceAccounts/Attach */
        "resources.clubs.relationship.financeAccounts.attach": {
            /**
             * type
             * @default finance-accounts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Club/Relationship/FinanceAccounts/Detach */
        "resources.clubs.relationship.financeAccounts.detach": {
            /**
             * type
             * @default finance-accounts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Club/Relationship/FinanceAccounts/Fetch */
        "resources.clubs.relationship.financeAccounts.fetch": {
            /**
             * type
             * @default finance-accounts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/Club/Relationship/FinanceAccounts/Update */
        "resources.clubs.relationship.financeAccounts.update": {
            /**
             * type
             * @default finance-accounts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Club/Relationship/MembershipTypes/Attach */
        "resources.clubs.relationship.membershipTypes.attach": {
            /**
             * type
             * @default membership-types
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Club/Relationship/MembershipTypes/Detach */
        "resources.clubs.relationship.membershipTypes.detach": {
            /**
             * type
             * @default membership-types
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Club/Relationship/MembershipTypes/Fetch */
        "resources.clubs.relationship.membershipTypes.fetch": {
            /**
             * type
             * @default membership-types
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/Club/Relationship/MembershipTypes/Update */
        "resources.clubs.relationship.membershipTypes.update": {
            /**
             * type
             * @default membership-types
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Club/Fetch */
        "resources.clubs.resource.fetch": {
            /**
             * type
             * @default clubs
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * slug
                 * @example bergnaum-inc
                 */
                slug?: string;
                /**
                 * title
                 * @example Bergnaum Inc
                 */
                title?: string;
                /**
                 * extendedTitle
                 * @example Morissette and Sons Inc
                 */
                extendedTitle?: string;
                /** applyTitle */
                applyTitle?: string;
                /**
                 * applyUrl
                 * @example https://app.vereinfacht.digital/de/bergnaum-inc/apply
                 */
                readonly applyUrl?: string;
                /**
                 * address
                 * @example 78849 Goyette Mountains Suite 463
                 */
                address?: string;
                /**
                 * zipCode
                 * @example 30293
                 */
                zipCode?: string;
                /**
                 * city
                 * @example Port Americo
                 */
                city?: string;
                /**
                 * country
                 * @example Bahamas
                 */
                country?: string;
                /**
                 * preferredLocale
                 * @example de
                 */
                preferredLocale?: string;
                /**
                 * email
                 * @example kody85@example.net
                 */
                email?: string;
                /**
                 * websiteUrl
                 * @example http://ondricka.com/quos-laudantium-aut-blanditiis-aut.html
                 */
                websiteUrl?: string;
                /**
                 * primaryColor
                 * @example #4ce566
                 */
                primaryColor?: string;
                /**
                 * logoUrl
                 * @example https://placehold.co/600x400/4CE566/FFFFFF/?text=Logo
                 */
                logoUrl?: string;
                /**
                 * privacyStatementUrl
                 * @example http://schamberger.info/dolore-optio-pariatur-vel-expedita-ea
                 */
                privacyStatementUrl?: string;
                /**
                 * contributionStatementUrl
                 * @example http://www.braun.org/
                 */
                contributionStatementUrl?: string;
                /**
                 * constitutionUrl
                 * @example http://dare.com/expedita-facilis-placeat-voluptatem
                 */
                constitutionUrl?: string;
                /**
                 * membershipStartCycleType
                 * @example monthly
                 */
                membershipStartCycleType?: string;
                /**
                 * allowVoluntaryContribution
                 * @example true
                 */
                allowVoluntaryContribution?: boolean;
                /**
                 * hasConsentedMediaPublicationIsRequired
                 * @example false
                 */
                hasConsentedMediaPublicationIsRequired?: boolean;
                /**
                 * hasConsentedMediaPublicationDefaultValue
                 * @example true
                 */
                hasConsentedMediaPublicationDefaultValue?: boolean;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** divisions */
                divisions?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        self?: string;
                    };
                };
                /** membershipTypes */
                membershipTypes?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        self?: string;
                    };
                };
                /** paymentPeriods */
                paymentPeriods?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/payment-periods/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/payment-periods/1
                         */
                        self?: string;
                    };
                };
                /** financeAccounts */
                financeAccounts?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/finance-accounts/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/finance-accounts/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Club/Update */
        "resources.clubs.resource.update": {
            /**
             * type
             * @default clubs
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * slug
                 * @example bergnaum-inc
                 */
                slug?: string;
                /**
                 * title
                 * @example Bergnaum Inc
                 */
                title?: string;
                /**
                 * extendedTitle
                 * @example Morissette and Sons Inc
                 */
                extendedTitle?: string;
                /** applyTitle */
                applyTitle?: string;
                /**
                 * applyUrl
                 * @example https://app.vereinfacht.digital/de/bergnaum-inc/apply
                 */
                readonly applyUrl?: string;
                /**
                 * address
                 * @example 78849 Goyette Mountains Suite 463
                 */
                address?: string;
                /**
                 * zipCode
                 * @example 30293
                 */
                zipCode?: string;
                /**
                 * city
                 * @example Port Americo
                 */
                city?: string;
                /**
                 * country
                 * @example Bahamas
                 */
                country?: string;
                /**
                 * preferredLocale
                 * @example de
                 */
                preferredLocale?: string;
                /**
                 * email
                 * @example kody85@example.net
                 */
                email?: string;
                /**
                 * websiteUrl
                 * @example http://ondricka.com/quos-laudantium-aut-blanditiis-aut.html
                 */
                websiteUrl?: string;
                /**
                 * primaryColor
                 * @example #4ce566
                 */
                primaryColor?: string;
                /**
                 * logoUrl
                 * @example https://placehold.co/600x400/4CE566/FFFFFF/?text=Logo
                 */
                logoUrl?: string;
                /**
                 * privacyStatementUrl
                 * @example http://schamberger.info/dolore-optio-pariatur-vel-expedita-ea
                 */
                privacyStatementUrl?: string;
                /**
                 * contributionStatementUrl
                 * @example http://www.braun.org/
                 */
                contributionStatementUrl?: string;
                /**
                 * constitutionUrl
                 * @example http://dare.com/expedita-facilis-placeat-voluptatem
                 */
                constitutionUrl?: string;
                /**
                 * membershipStartCycleType
                 * @example monthly
                 */
                membershipStartCycleType?: string;
                /**
                 * allowVoluntaryContribution
                 * @example true
                 */
                allowVoluntaryContribution?: boolean;
                /**
                 * hasConsentedMediaPublicationIsRequired
                 * @example false
                 */
                hasConsentedMediaPublicationIsRequired?: boolean;
                /**
                 * hasConsentedMediaPublicationDefaultValue
                 * @example true
                 */
                hasConsentedMediaPublicationDefaultValue?: boolean;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** divisions */
                divisions?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        self?: string;
                    };
                };
                /** membershipTypes */
                membershipTypes?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        self?: string;
                    };
                };
                /** paymentPeriods */
                paymentPeriods?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/payment-periods/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/payment-periods/1
                         */
                        self?: string;
                    };
                };
                /** financeAccounts */
                financeAccounts?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/finance-accounts/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/finance-accounts/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Division/Fetch */
        "resources.divisions.resource.fetch": {
            /**
             * type
             * @default divisions
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * title
                 * @example en occaecati
                 */
                readonly title?: string;
                /**
                 * titleTranslations
                 * @example en occaecati
                 */
                titleTranslations?: Record<string, never>;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** members */
                members?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/members/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/members/1
                         */
                        self?: string;
                    };
                };
                /** membershipTypes */
                membershipTypes?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Division/Update */
        "resources.divisions.resource.update": {
            /**
             * type
             * @default divisions
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * title
                 * @example en occaecati
                 */
                readonly title?: string;
                /**
                 * titleTranslations
                 * @example en occaecati
                 */
                titleTranslations?: Record<string, never>;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** members */
                members?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/members/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/members/1
                         */
                        self?: string;
                    };
                };
                /** membershipTypes */
                membershipTypes?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Finance-account/Relationship/Club/Fetch */
        "resources.finance-accounts.relationship.club.fetch": {
            /**
             * type
             * @default clubs
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/Finance-account/Relationship/Club/Update */
        "resources.finance-accounts.relationship.club.update": {
            /**
             * type
             * @default clubs
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/Finance-account/Relationship/Transactions/Attach */
        "resources.finance-accounts.relationship.transactions.attach": {
            /**
             * type
             * @default transactions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Finance-account/Relationship/Transactions/Detach */
        "resources.finance-accounts.relationship.transactions.detach": {
            /**
             * type
             * @default transactions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Finance-account/Relationship/Transactions/Fetch */
        "resources.finance-accounts.relationship.transactions.fetch": {
            /**
             * type
             * @default transactions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/Finance-account/Relationship/Transactions/Update */
        "resources.finance-accounts.relationship.transactions.update": {
            /**
             * type
             * @default transactions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Finance-account/Fetch */
        "resources.finance-accounts.resource.fetch": {
            /**
             * type
             * @default finance-accounts
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * title
                 * @example finance acount voluptas
                 */
                title?: string;
                /**
                 * title
                 * @example bank_account
                 */
                accountType?: string;
                /**
                 * iban
                 * @example VG13XCRJ2733001449577688
                 */
                iban?: string;
                /**
                 * bic
                 * @example DFHONZXJWZ6
                 */
                bic?: string;
                /**
                 * initialBalance
                 * @example 29976
                 */
                initialBalance?: number;
                /** currentBalance */
                readonly currentBalance?: number;
                /**
                 * startsAt
                 * @example 1976-06-10T13:31:06.000000Z
                 */
                startsAt?: string;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:44.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:44.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** types */
                types?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/types/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/types/1
                         */
                        self?: string;
                    };
                };
                /** transactions */
                transactions?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/transactions/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/transactions/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Finance-account/Store */
        "resources.finance-accounts.resource.store": {
            /**
             * type
             * @default finance-accounts
             */
            type: string;
            attributes: {
                /**
                 * title
                 * @example finance acount voluptas
                 */
                title?: string;
                /**
                 * title
                 * @example bank_account
                 */
                accountType?: string;
                /**
                 * iban
                 * @example VG13XCRJ2733001449577688
                 */
                iban?: string;
                /**
                 * bic
                 * @example DFHONZXJWZ6
                 */
                bic?: string;
                /**
                 * initialBalance
                 * @example 29976
                 */
                initialBalance?: number;
                /** currentBalance */
                readonly currentBalance?: number;
                /**
                 * startsAt
                 * @example 1976-06-10T13:31:06.000000Z
                 */
                startsAt?: string;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:44.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:44.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** types */
                types?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/types/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/types/1
                         */
                        self?: string;
                    };
                };
                /** transactions */
                transactions?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/transactions/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/transactions/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Finance-account/Update */
        "resources.finance-accounts.resource.update": {
            /**
             * type
             * @default finance-accounts
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * title
                 * @example finance acount voluptas
                 */
                title?: string;
                /**
                 * title
                 * @example bank_account
                 */
                accountType?: string;
                /**
                 * iban
                 * @example VG13XCRJ2733001449577688
                 */
                iban?: string;
                /**
                 * bic
                 * @example DFHONZXJWZ6
                 */
                bic?: string;
                /**
                 * initialBalance
                 * @example 29976
                 */
                initialBalance?: number;
                /** currentBalance */
                readonly currentBalance?: number;
                /**
                 * startsAt
                 * @example 1976-06-10T13:31:06.000000Z
                 */
                startsAt?: string;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:44.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:44.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** transactions */
                transactions?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/transactions/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/transactions/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Finance-contact/Relationship/Receipts/Attach */
        "resources.finance-contacts.relationship.receipts.attach": {
            /**
             * type
             * @default receipts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Finance-contact/Relationship/Receipts/Detach */
        "resources.finance-contacts.relationship.receipts.detach": {
            /**
             * type
             * @default receipts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Finance-contact/Relationship/Receipts/Fetch */
        "resources.finance-contacts.relationship.receipts.fetch": {
            /**
             * type
             * @default receipts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/Finance-contact/Relationship/Receipts/Update */
        "resources.finance-contacts.relationship.receipts.update": {
            /**
             * type
             * @default receipts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Finance-contact/Fetch */
        "resources.finance-contacts.resource.fetch": {
            /**
             * type
             * @default finance-contacts
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * lastName
                 * @example Pfeffer
                 */
                lastName?: string;
                /**
                 * firstName
                 * @example Jewel
                 */
                firstName?: string;
                /**
                 * fullName
                 * @example Jewel Pfeffer
                 */
                fullName?: string;
                /** companyName */
                companyName?: string;
                /**
                 * gender
                 * @example female
                 */
                gender?: string;
                /**
                 * address
                 * @example 5096 Reynolds Shore Apt. 863
                 */
                address?: string;
                /**
                 * zipCode
                 * @example 65642-4518
                 */
                zipCode?: string;
                /**
                 * city
                 * @example Amandaport
                 */
                city?: string;
                /**
                 * country
                 * @example Faroe Islands
                 */
                country?: string;
                /**
                 * phoneNumber
                 * @example +14582898852
                 */
                phoneNumber?: string;
                /**
                 * email
                 * @example haley.luigi@example.org
                 */
                email?: string;
                /**
                 * contactType
                 * @example person
                 */
                contactType?: string;
                /**
                 * createdAt
                 * @example 2025-07-07T10:04:26.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-07-07T10:04:26.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** receipts */
                receipts?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/receipts/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/receipts/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Finance-contact/Store */
        "resources.finance-contacts.resource.store": {
            /**
             * type
             * @default finance-contacts
             */
            type: string;
            attributes: {
                /**
                 * lastName
                 * @example Crooks
                 */
                lastName?: string;
                /**
                 * firstName
                 * @example Kieran
                 */
                firstName?: string;
                /**
                 * fullName
                 * @example Kieran Crooks
                 */
                fullName?: string;
                /** companyName */
                companyName?: string;
                /**
                 * gender
                 * @example other
                 */
                gender?: string;
                /**
                 * address
                 * @example 86280 Brakus Throughway Suite 121
                 */
                address?: string;
                /**
                 * zipCode
                 * @example 01637-4772
                 */
                zipCode?: string;
                /**
                 * city
                 * @example New Israel
                 */
                city?: string;
                /**
                 * country
                 * @example Libyan Arab Jamahiriya
                 */
                country?: string;
                /**
                 * phoneNumber
                 * @example +18649861189
                 */
                phoneNumber?: string;
                /**
                 * email
                 * @example elyssa.stoltenberg@example.com
                 */
                email?: string;
                /**
                 * contactType
                 * @example person
                 */
                contactType?: string;
                /**
                 * createdAt
                 * @example 2025-08-15T09:33:58.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-08-15T09:33:58.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Finance-contact/Update */
        "resources.finance-contacts.resource.update": {
            /**
             * type
             * @default finance-contacts
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * lastName
                 * @example Cormier
                 */
                lastName?: string;
                /**
                 * firstName
                 * @example Louie
                 */
                firstName?: string;
                /**
                 * fullName
                 * @example Louie Cormier
                 */
                fullName?: string;
                /**
                 * companyName
                 * @example asdff
                 */
                companyName?: string;
                /**
                 * gender
                 * @example female
                 */
                gender?: string;
                /**
                 * address
                 * @example 24190 Nikolaus Vista
                 */
                address?: string;
                /**
                 * zipCode
                 * @example 16942-8890
                 */
                zipCode?: string;
                /**
                 * city
                 * @example Myrticechester
                 */
                city?: string;
                /**
                 * country
                 * @example Haiti
                 */
                country?: string;
                /**
                 * phoneNumber
                 * @example +17072014089
                 */
                phoneNumber?: string;
                /**
                 * email
                 * @example franco.satterfield@example.org
                 */
                email?: string;
                /**
                 * contactType
                 * @example company
                 */
                contactType?: string;
                /**
                 * createdAt
                 * @example 2025-09-01T11:15:29.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-09-03T11:08:00.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Member/Relationship/Divisions/Attach */
        "resources.members.relationship.divisions.attach": {
            /**
             * type
             * @default divisions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Member/Relationship/Divisions/Detach */
        "resources.members.relationship.divisions.detach": {
            /**
             * type
             * @default divisions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Member/Relationship/Divisions/Fetch */
        "resources.members.relationship.divisions.fetch": {
            /**
             * type
             * @default divisions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/Member/Relationship/Divisions/Update */
        "resources.members.relationship.divisions.update": {
            /**
             * type
             * @default divisions
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Member/Fetch */
        "resources.members.resource.fetch": {
            /**
             * type
             * @default members
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * firstName
                 * @example Isaias
                 */
                firstName?: string;
                /**
                 * lastName
                 * @example Beahan
                 */
                lastName?: string;
                /** gender */
                gender?: string;
                /**
                 * address
                 * @example 5486 Antonetta Court
                 */
                address?: string;
                /**
                 * zipCode
                 * @example 88433-4031
                 */
                zipCode?: string;
                /**
                 * city
                 * @example Cheyanneport
                 */
                city?: string;
                /**
                 * country
                 * @example Suriname
                 */
                country?: string;
                /**
                 * preferredLocale
                 * @example en
                 */
                preferredLocale?: string;
                /**
                 * birthday
                 * @example 1971-02-03T00:00:00.000000Z
                 */
                birthday?: string;
                /**
                 * phoneNumber
                 * @example +18433556356
                 */
                phoneNumber?: string;
                /**
                 * email
                 * @example bartholome30@example.com
                 */
                email?: string;
                /** membershipTypeId */
                readonly membershipTypeId?: string;
                /** hasConsentedMediaPublication */
                hasConsentedMediaPublication?: boolean;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** membership */
                membership?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/memberships/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/memberships/1
                         */
                        self?: string;
                    };
                };
                /** divisions */
                divisions?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Member/Store */
        "resources.members.resource.store": {
            /**
             * type
             * @default members
             */
            type: string;
            attributes: {
                /**
                 * firstName
                 * @example Isaias
                 */
                firstName?: string;
                /**
                 * lastName
                 * @example Beahan
                 */
                lastName?: string;
                /** gender */
                gender?: string;
                /**
                 * address
                 * @example 5486 Antonetta Court
                 */
                address?: string;
                /**
                 * zipCode
                 * @example 88433-4031
                 */
                zipCode?: string;
                /**
                 * city
                 * @example Cheyanneport
                 */
                city?: string;
                /**
                 * country
                 * @example Suriname
                 */
                country?: string;
                /**
                 * preferredLocale
                 * @example en
                 */
                preferredLocale?: string;
                /**
                 * birthday
                 * @example 1971-02-03T00:00:00.000000Z
                 */
                birthday?: string;
                /**
                 * phoneNumber
                 * @example +18433556356
                 */
                phoneNumber?: string;
                /**
                 * email
                 * @example bartholome30@example.com
                 */
                email?: string;
                /** membershipTypeId */
                readonly membershipTypeId?: string;
                /** hasConsentedMediaPublication */
                hasConsentedMediaPublication?: boolean;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** membership */
                membership?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/memberships/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/memberships/1
                         */
                        self?: string;
                    };
                };
                /** divisions */
                divisions?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Membership-type/Fetch */
        "resources.membership-types.resource.fetch": {
            /**
             * type
             * @default membership-types
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * title
                 * @example en maiores
                 */
                title?: string;
                /**
                 * titleTranslations
                 * @example en maiores
                 */
                titleTranslations?: Record<string, never>;
                /**
                 * description
                 * @example en Dolores in quis nam quos maiores. Cupiditate voluptates officia non cupiditate vel rerum sed voluptatum. Molestias et aut ut earum eum in.
                 */
                description?: string;
                /**
                 * descriptionTranslations
                 * @example en Dolores in quis nam quos maiores. Cupiditate voluptates officia non cupiditate vel rerum sed voluptatum. Molestias et aut ut earum eum in.
                 */
                descriptionTranslations?: Record<string, never>;
                /**
                 * admissionFee
                 * @example 20
                 */
                admissionFee?: number;
                /**
                 * monthlyFee
                 * @example 20
                 */
                monthlyFee?: number;
                /**
                 * minimumNumberOfMonths
                 * @example 6
                 */
                minimumNumberOfMonths?: number;
                /**
                 * minimumNumberOfMembers
                 * @example 2
                 */
                minimumNumberOfMembers?: number;
                /**
                 * maximumNumberOfMembers
                 * @example 2
                 */
                maximumNumberOfMembers?: number;
                /**
                 * sortOrder
                 * @example 1
                 */
                sortOrder?: number;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** divisions */
                divisions?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        self?: string;
                    };
                };
                /** divisionMembershipTypes */
                divisionMembershipTypes?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/division-membership-types/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/division-membership-types/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Membership-type/Update */
        "resources.membership-types.resource.update": {
            /**
             * type
             * @default membership-types
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * title
                 * @example en maiores
                 */
                title?: string;
                /**
                 * titleTranslations
                 * @example en maiores
                 */
                titleTranslations?: Record<string, never>;
                /**
                 * description
                 * @example en Dolores in quis nam quos maiores. Cupiditate voluptates officia non cupiditate vel rerum sed voluptatum. Molestias et aut ut earum eum in.
                 */
                description?: string;
                /**
                 * descriptionTranslations
                 * @example en Dolores in quis nam quos maiores. Cupiditate voluptates officia non cupiditate vel rerum sed voluptatum. Molestias et aut ut earum eum in.
                 */
                descriptionTranslations?: Record<string, never>;
                /**
                 * admissionFee
                 * @example 20
                 */
                admissionFee?: number;
                /**
                 * monthlyFee
                 * @example 20
                 */
                monthlyFee?: number;
                /**
                 * minimumNumberOfMonths
                 * @example 6
                 */
                minimumNumberOfMonths?: number;
                /**
                 * minimumNumberOfMembers
                 * @example 2
                 */
                minimumNumberOfMembers?: number;
                /**
                 * maximumNumberOfMembers
                 * @example 2
                 */
                maximumNumberOfMembers?: number;
                /**
                 * sortOrder
                 * @example 1
                 */
                sortOrder?: number;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** divisions */
                divisions?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/divisions/1
                         */
                        self?: string;
                    };
                };
                /** divisionMembershipTypes */
                divisionMembershipTypes?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/division-membership-types/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/division-membership-types/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Membership/Fetch */
        "resources.memberships.resource.fetch": {
            /**
             * type
             * @default memberships
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * bankIban
                 * @example DE67539151143545929215
                 */
                bankIban?: string;
                /**
                 * bankAccountHolder
                 * @example Lourdes Wilkinson Jr.
                 */
                bankAccountHolder?: string;
                /** notes */
                notes?: string;
                /**
                 * status
                 * @example applied
                 */
                status?: string;
                /** monthlyFee */
                readonly monthlyFee?: string;
                /**
                 * voluntaryContribution
                 * @example 0
                 */
                voluntaryContribution?: number;
                /**
                 * startedAt
                 * @example 2022-01-22T13:08:56.000000Z
                 */
                startedAt?: string;
                /** endedAt */
                endedAt?: string;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** membershipType */
                membershipType?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        self?: string;
                    };
                };
                /** owner */
                owner?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/owners/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/owners/1
                         */
                        self?: string;
                    };
                };
                /** paymentPeriod */
                paymentPeriod?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/payment-periods/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/payment-periods/1
                         */
                        self?: string;
                    };
                };
                /** members */
                members?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/members/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/members/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Membership/Store */
        "resources.memberships.resource.store": {
            /**
             * type
             * @default memberships
             */
            type: string;
            attributes: {
                /**
                 * bankIban
                 * @example DE67539151143545929215
                 */
                bankIban?: string;
                /**
                 * bankAccountHolder
                 * @example Lourdes Wilkinson Jr.
                 */
                bankAccountHolder?: string;
                /** notes */
                notes?: string;
                /**
                 * status
                 * @example applied
                 */
                status?: string;
                /** monthlyFee */
                readonly monthlyFee?: string;
                /**
                 * voluntaryContribution
                 * @example 0
                 */
                voluntaryContribution?: number;
                /**
                 * startedAt
                 * @example 2022-01-22T13:08:56.000000Z
                 */
                startedAt?: string;
                /** endedAt */
                endedAt?: string;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** membershipType */
                membershipType?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        self?: string;
                    };
                };
                /** owner */
                owner?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/owners/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/owners/1
                         */
                        self?: string;
                    };
                };
                /** paymentPeriod */
                paymentPeriod?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/payment-periods/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/payment-periods/1
                         */
                        self?: string;
                    };
                };
                /** members */
                members?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/members/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/members/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Membership/Update */
        "resources.memberships.resource.update": {
            /**
             * type
             * @default memberships
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * bankIban
                 * @example DE67539151143545929215
                 */
                bankIban?: string;
                /**
                 * bankAccountHolder
                 * @example Lourdes Wilkinson Jr.
                 */
                bankAccountHolder?: string;
                /** notes */
                notes?: string;
                /**
                 * status
                 * @example applied
                 */
                status?: string;
                /** monthlyFee */
                readonly monthlyFee?: string;
                /**
                 * voluntaryContribution
                 * @example 0
                 */
                voluntaryContribution?: number;
                /**
                 * startedAt
                 * @example 2022-01-22T13:08:56.000000Z
                 */
                startedAt?: string;
                /** endedAt */
                endedAt?: string;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:43.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** membershipType */
                membershipType?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/membership-types/1
                         */
                        self?: string;
                    };
                };
                /** owner */
                owner?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/owners/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/owners/1
                         */
                        self?: string;
                    };
                };
                /** paymentPeriod */
                paymentPeriod?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/payment-periods/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/payment-periods/1
                         */
                        self?: string;
                    };
                };
                /** members */
                members?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/members/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/members/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Permission/Fetch */
        "resources.permissions.resource.fetch": {
            /**
             * type
             * @default permissions
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * name
                 * @example view clubs
                 */
                name?: string;
                /**
                 * createdAt
                 * @example 2025-07-23T10:04:18.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-07-23T10:04:18.000000Z
                 */
                readonly updatedAt?: string;
            };
        };
        /** Resource/Role/Fetch */
        "resources.roles.resource.fetch": {
            /**
             * type
             * @default roles
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * name
                 * @example super admin
                 */
                name?: string;
                /**
                 * createdAt
                 * @example 2025-07-23T10:04:18.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-07-23T10:04:18.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** permissions */
                permissions?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/permissions/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/permissions/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Receipt/Fetch */
        "resources.receipts.resource.fetch": {
            /**
             * type
             * @default receipts
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * referenceNumber
                 * @example REF-26050
                 */
                referenceNumber?: string;
                /**
                 * type
                 * @example income
                 */
                type?: string;
                /**
                 * documentDate
                 * @example 2024-08-27 15:39:37
                 */
                documentDate?: string;
                /**
                 * amount
                 * @example 828
                 */
                amount?: string;
                /**
                 * createdAt
                 * @example 2025-08-25T13:06:27.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-08-25T13:06:27.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** club */
                club?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/clubs/1
                         */
                        self?: string;
                    };
                };
                /** transactions */
                transactions?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/transactions/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/transactions/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Transaction/Relationship/FinanceAccount/Fetch */
        "resources.transactions.relationship.financeAccount.fetch": {
            /**
             * type
             * @default finance-accounts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/Transaction/Relationship/FinanceAccount/Update */
        "resources.transactions.relationship.financeAccount.update": {
            /**
             * type
             * @default finance-accounts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/Transaction/Relationship/Receipts/Attach */
        "resources.transactions.relationship.receipts.attach": {
            /**
             * type
             * @default receipts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Transaction/Relationship/Receipts/Detach */
        "resources.transactions.relationship.receipts.detach": {
            /**
             * type
             * @default receipts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Transaction/Relationship/Receipts/Fetch */
        "resources.transactions.relationship.receipts.fetch": {
            /**
             * type
             * @default receipts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/Transaction/Relationship/Receipts/Update */
        "resources.transactions.relationship.receipts.update": {
            /**
             * type
             * @default receipts
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/Transaction/Fetch */
        "resources.transactions.resource.fetch": {
            /**
             * type
             * @default transactions
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * name
                 * @example Marie Hilpert I
                 */
                name?: string;
                /**
                 * description
                 * @example Perspiciatis vitae quidem est dolorem ratione.
                 */
                description?: string;
                /**
                 * amount
                 * @example -440.01
                 */
                amount?: number;
                /**
                 * valuedAt
                 * @example 2024-10-16T17:29:42.000000Z
                 */
                valuedAt?: string;
                /**
                 * bookedAt
                 * @example 2024-10-16T17:29:42.000000Z
                 */
                bookedAt?: string;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:44.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:44.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** financeAccount */
                financeAccount?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/finance-accounts/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/finance-accounts/1
                         */
                        self?: string;
                    };
                };
                /** receipts */
                receipts?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/receipts/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/receipts/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/Transaction/Update */
        "resources.transactions.resource.update": {
            /**
             * type
             * @default transactions
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * name
                 * @example Marie Hilpert I
                 */
                name?: string;
                /**
                 * description
                 * @example Perspiciatis vitae quidem est dolorem ratione.
                 */
                description?: string;
                /**
                 * amount
                 * @example -440.01
                 */
                amount?: number;
                /**
                 * valuedAt
                 * @example 2024-10-16T17:29:42.000000Z
                 */
                valuedAt?: string;
                /**
                 * bookedAt
                 * @example 2024-10-16T17:29:42.000000Z
                 */
                bookedAt?: string;
                /**
                 * createdAt
                 * @example 2025-05-14T08:40:44.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-05-14T08:40:44.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** financeAccount */
                financeAccount?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/finance-accounts/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/finance-accounts/1
                         */
                        self?: string;
                    };
                };
            };
        };
        /** Resource/User/Relationship/Roles/Attach */
        "resources.users.relationship.roles.attach": {
            /**
             * type
             * @default roles
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/User/Relationship/Roles/Detach */
        "resources.users.relationship.roles.detach": {
            /**
             * type
             * @default roles
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/User/Relationship/Roles/Fetch */
        "resources.users.relationship.roles.fetch": {
            /**
             * type
             * @default roles
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        };
        /** Resource/User/Relationship/Roles/Update */
        "resources.users.relationship.roles.update": {
            /**
             * type
             * @default roles
             */
            type: string;
            /**
             * id
             * @example 1
             */
            id: string;
        }[];
        /** Resource/User/Fetch */
        "resources.users.resource.fetch": {
            /**
             * type
             * @default users
             */
            type: string;
            /** @example 1 */
            id: string;
            attributes: {
                /**
                 * name
                 * @example Ricky Douglas
                 */
                name?: string;
                /**
                 * email
                 * @example hello@vereinfacht.digital
                 */
                email?: string;
                /**
                 * preferredLocale
                 * @example de
                 */
                preferredLocale?: string;
                /**
                 * createdAt
                 * @example 2025-07-23T10:04:18.000000Z
                 */
                readonly createdAt?: string;
                /**
                 * updatedAt
                 * @example 2025-07-23T10:04:18.000000Z
                 */
                readonly updatedAt?: string;
            };
            relationships?: {
                /** roles */
                roles?: {
                    readonly links?: {
                        /**
                         * related
                         * @example http://api.verein.localhost/api/v1/roles/1
                         */
                        related?: string;
                        /**
                         * self
                         * @example http://api.verein.localhost/api/v1/roles/1
                         */
                        self?: string;
                    };
                };
            };
        };
    };
    responses: {
        /** @description Bad request */
        400: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.api+json": {
                    "helper.jsonapi"?: components["schemas"]["helper.jsonapi"];
                    "helper.errors"?: components["schemas"]["helper.errors"];
                };
            };
        };
        /** @description Unauthorized Action */
        401: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.api+json": {
                    "helper.jsonapi"?: components["schemas"]["helper.jsonapi"];
                    "helper.errors"?: components["schemas"]["helper.errors"];
                };
            };
        };
        /** @description Content Not Found */
        404: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.api+json": {
                    "helper.jsonapi"?: components["schemas"]["helper.jsonapi"];
                    "helper.errors"?: components["schemas"]["helper.errors"];
                };
            };
        };
        /** @description Unprocessable Entity */
        422: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.api+json": {
                    "helper.jsonapi"?: components["schemas"]["helper.jsonapi"];
                    "helper.errors"?: components["schemas"]["helper.errors"];
                };
            };
        };
    };
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "memberships.index": {
        parameters: {
            query?: {
                /** @description The page size for paginated results */
                "page[size]"?: number;
                /** @description The page number for paginated results */
                "page[number]"?: number;
                sort?: ("id" | "-id" | "startedAt" | "-startedAt" | "endedAt" | "-endedAt" | "createdAt" | "-createdAt" | "updatedAt" | "-updatedAt")[];
                /** @description A list of ids to filter by. */
                "filter[id]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Index memberships */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.memberships.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
        };
    };
    "memberships.store": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.memberships.resource.store"];
                };
            };
        };
        responses: {
            /** @description Store memberships */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.memberships.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "memberships.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                membership: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show memberships */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.memberships.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "memberships.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                membership: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.memberships.resource.update"];
                };
            };
        };
        responses: {
            /** @description Update memberships */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.memberships.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "membership-types.index": {
        parameters: {
            query?: {
                /** @description The page size for paginated results */
                "page[size]"?: number;
                /** @description The page number for paginated results */
                "page[number]"?: number;
                sort?: ("id" | "-id" | "sortOrder" | "-sortOrder" | "createdAt" | "-createdAt" | "updatedAt" | "-updatedAt")[];
                /** @description A list of ids to filter by. */
                "filter[id]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Index membership-types */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.membership-types.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
        };
    };
    "membership-types.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                membership_type: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show membership-types */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.membership-types.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "membership-types.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                membership_type: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.membership-types.resource.update"];
                };
            };
        };
        responses: {
            /** @description Update membership-types */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.membership-types.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "members.store": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.members.resource.store"];
                };
            };
        };
        responses: {
            /** @description Store members */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.members.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "members.divisions": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                member: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ShowRelated members */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.divisions.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "members.divisions.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                member: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show members */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.members.relationship.divisions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "members.divisions.attach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                member: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.members.relationship.divisions.attach"];
                };
            };
        };
        responses: {
            /** @description Attach members */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.members.relationship.divisions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "members.divisions.detach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                member: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.members.relationship.divisions.detach"];
                };
            };
        };
        responses: {
            /** @description Detach members */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.members.relationship.divisions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "members.divisions.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                member: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.members.relationship.divisions.update"];
                };
            };
        };
        responses: {
            /** @description Update members */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.members.relationship.divisions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "divisions.index": {
        parameters: {
            query?: {
                /** @description The page size for paginated results */
                "page[size]"?: number;
                /** @description The page number for paginated results */
                "page[number]"?: number;
                sort?: ("id" | "-id" | "createdAt" | "-createdAt" | "updatedAt" | "-updatedAt")[];
                /** @description A list of ids to filter by. */
                "filter[id]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Index divisions */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.divisions.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
        };
    };
    "divisions.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                division: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show divisions */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.divisions.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "divisions.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                division: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.divisions.resource.update"];
                };
            };
        };
        responses: {
            /** @description Update divisions */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.divisions.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.index": {
        parameters: {
            query?: {
                /** @description The page size for paginated results */
                "page[size]"?: number;
                /** @description The page number for paginated results */
                "page[number]"?: number;
                sort?: ("id" | "-id" | "createdAt" | "-createdAt" | "updatedAt" | "-updatedAt")[];
                /** @description A list of ids to filter by. */
                "filter[id]"?: string[];
                /** @description Filters the records */
                "filter[slug]"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Index clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
        };
    };
    "clubs.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.clubs.resource.update"];
                };
            };
        };
        responses: {
            /** @description Update clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.membershipTypes": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ShowRelated clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.membership-types.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.membershipTypes.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.membershipTypes.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.membershipTypes.attach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.clubs.relationship.membershipTypes.attach"];
                };
            };
        };
        responses: {
            /** @description Attach clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.membershipTypes.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "clubs.membershipTypes.detach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.clubs.relationship.membershipTypes.detach"];
                };
            };
        };
        responses: {
            /** @description Detach clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.membershipTypes.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.membershipTypes.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.clubs.relationship.membershipTypes.update"];
                };
            };
        };
        responses: {
            /** @description Update clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.membershipTypes.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "clubs.divisions": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ShowRelated clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.divisions.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.divisions.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.divisions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.divisions.attach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.clubs.relationship.divisions.attach"];
                };
            };
        };
        responses: {
            /** @description Attach clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.divisions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "clubs.divisions.detach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.clubs.relationship.divisions.detach"];
                };
            };
        };
        responses: {
            /** @description Detach clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.divisions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.divisions.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.clubs.relationship.divisions.update"];
                };
            };
        };
        responses: {
            /** @description Update clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.divisions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "clubs.financeAccounts": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ShowRelated clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.financeAccounts.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.financeAccounts.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.financeAccounts.attach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.clubs.relationship.financeAccounts.attach"];
                };
            };
        };
        responses: {
            /** @description Attach clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.financeAccounts.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "clubs.financeAccounts.detach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.clubs.relationship.financeAccounts.detach"];
                };
            };
        };
        responses: {
            /** @description Detach clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.financeAccounts.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "clubs.financeAccounts.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                club: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.clubs.relationship.financeAccounts.update"];
                };
            };
        };
        responses: {
            /** @description Update clubs */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.relationship.financeAccounts.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "users.index": {
        parameters: {
            query?: {
                /** @description The page size for paginated results */
                "page[size]"?: number;
                /** @description The page number for paginated results */
                "page[number]"?: number;
                sort?: ("id" | "-id" | "name" | "-name" | "preferredLocale" | "-preferredLocale" | "createdAt" | "-createdAt" | "updatedAt" | "-updatedAt")[];
                /** @description A list of ids to filter by. */
                "filter[id]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Index users */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.users.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
        };
    };
    "users.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show users */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.users.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "users.roles": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ShowRelated users */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.roles.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "users.roles.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show users */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.users.relationship.roles.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "users.roles.attach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.users.relationship.roles.attach"];
                };
            };
        };
        responses: {
            /** @description Attach users */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.users.relationship.roles.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "users.roles.detach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.users.relationship.roles.detach"];
                };
            };
        };
        responses: {
            /** @description Detach users */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.users.relationship.roles.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "users.roles.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.users.relationship.roles.update"];
                };
            };
        };
        responses: {
            /** @description Update users */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.users.relationship.roles.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "permissions.index": {
        parameters: {
            query?: {
                /** @description The page size for paginated results */
                "page[size]"?: number;
                /** @description The page number for paginated results */
                "page[number]"?: number;
                sort?: ("id" | "-id" | "name" | "-name" | "createdAt" | "-createdAt" | "updatedAt" | "-updatedAt")[];
                /** @description A list of ids to filter by. */
                "filter[id]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Index permissions */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.permissions.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
        };
    };
    "finance-contacts.index": {
        parameters: {
            query?: {
                /** @description The page size for paginated results */
                "page[size]"?: number;
                /** @description The page number for paginated results */
                "page[number]"?: number;
                sort?: ("id" | "-id" | "companyName" | "-companyName" | "city" | "-city" | "fullName" | "-fullName" | "fullName" | "-fullName")[];
                /** @description A list of ids to filter by. */
                "filter[id]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Index finance-contacts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-contacts.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
        };
    };
    "finance-contacts.store": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.finance-contacts.resource.store"];
                };
            };
        };
        responses: {
            /** @description Store finance-contacts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-contacts.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-contacts.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_contact: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show finance-contacts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-contacts.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-contacts.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_contact: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.finance-contacts.resource.update"];
                };
            };
        };
        responses: {
            /** @description Update finance-contacts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-contacts.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "receipts.index": {
        parameters: {
            query?: {
                /** @description The page size for paginated results */
                "page[size]"?: number;
                /** @description The page number for paginated results */
                "page[number]"?: number;
                sort?: ("id" | "-id" | "documentDate" | "-documentDate" | "amount" | "-amount")[];
                /** @description A list of ids to filter by. */
                "filter[id]"?: string[];
                /** @description A list of types to filter by. */
                "filter[type]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Index receipts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.receipts.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
        };
    };
    "receipts.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                receipt: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show receipts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.receipts.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-accounts.index": {
        parameters: {
            query?: {
                /** @description The page size for paginated results */
                "page[size]"?: number;
                /** @description The page number for paginated results */
                "page[number]"?: number;
                sort?: ("id" | "-id" | "createdAt" | "-createdAt" | "updatedAt" | "-updatedAt")[];
                /** @description A list of ids to filter by. */
                "filter[id]"?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Index finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
        };
    };
    "finance-accounts.store": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.finance-accounts.resource.store"];
                };
            };
        };
        responses: {
            /** @description Store finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-accounts.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_account: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-accounts.destroy": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_account: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-accounts.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_account: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.finance-accounts.resource.update"];
                };
            };
        };
        responses: {
            /** @description Update finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-accounts.club": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_account: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ShowRelated finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.clubs.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-accounts.club.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_account: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.relationship.club.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-accounts.club.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_account: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.finance-accounts.relationship.club.update"];
                };
            };
        };
        responses: {
            /** @description Update finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.relationship.club.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "finance-accounts.transactions": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_account: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ShowRelated finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.transactions.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-accounts.transactions.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_account: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.relationship.transactions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-accounts.transactions.attach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_account: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.finance-accounts.relationship.transactions.attach"];
                };
            };
        };
        responses: {
            /** @description Attach finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.relationship.transactions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "finance-accounts.transactions.detach": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_account: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.finance-accounts.relationship.transactions.detach"];
                };
            };
        };
        responses: {
            /** @description Detach finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.relationship.transactions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "finance-accounts.transactions.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                finance_account: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.finance-accounts.relationship.transactions.update"];
                };
            };
        };
        responses: {
            /** @description Update finance-accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.relationship.transactions.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
    "transactions.index": {
        parameters: {
            query?: {
                /** @description The page size for paginated results */
                "page[size]"?: number;
                /** @description The page number for paginated results */
                "page[number]"?: number;
                sort?: ("id" | "-id" | "valuedAt" | "-valuedAt" | "bookedAt" | "-bookedAt" | "createdAt" | "-createdAt" | "updatedAt" | "-updatedAt")[];
                /** @description A list of ids to filter by. */
                "filter[id]"?: string[];
                /** @description Filters the records */
                "filter[financeAccountId]"?: string;
                /** @description Filters the records */
                "filter[query]"?: string;
                /** @description Filters the records */
                "filter[withoutReceipts]"?: string;
                /** @description Filters the records */
                "filter[status]"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Index transactions */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        meta?: {
                            page?: components["schemas"]["meta.page"];
                        };
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.transactions.resource.fetch"][];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
        };
    };
    "transactions.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                transaction: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show transactions */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.transactions.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "transactions.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                transaction: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.transactions.resource.update"];
                };
            };
        };
        responses: {
            /** @description Update transactions */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.transactions.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "transactions.financeAccount": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                transaction: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ShowRelated transactions */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.finance-accounts.resource.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "transactions.financeAccount.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                transaction: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show transactions */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.transactions.relationship.financeAccount.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
        };
    };
    "transactions.financeAccount.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                transaction: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/vnd.api+json": {
                    data: components["schemas"]["resources.transactions.relationship.financeAccount.update"];
                };
            };
        };
        responses: {
            /** @description Update transactions */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.api+json": {
                        jsonapi: {
                            /**
                             * version
                             * @example 1.0
                             */
                            version?: string;
                        };
                        data: components["schemas"]["resources.transactions.relationship.financeAccount.fetch"];
                    };
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            404: components["responses"]["404"];
            422: components["responses"]["422"];
        };
    };
}
